os códigos se encontran no final desta página!

1. Crie um código em C para escrever "Ola mundo!" em um arquivo chamado 'ola_mundo.txt'
#include <stdio.h>
#include <stdlib.h>

int main()
{
FILE *fp;
char string[100]="Ola Mundo!";
int i=0;

fp= fopen("ola_mundo.txt","w");

if(!fp){
//Arquivo ASCII, para escrita
printf("Erro na leitura do arquivo");
exit(0);
}

for(i=0;string[i];i++);
putc(string[i],fp);
fclose(fp);
return 0;
}

}


}
2. Crie um código em C que pergunta ao usuário seu nome e sua idade, e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':
	$ ./ola_usuario_1
	$ Digite o seu nome: Eu
	$ Digite a sua idade: 30
	$ cat Eu.txt
	$ Nome: Eu
	$ Idade: 30 anos
	$

3. Crie um código em C que recebe o nome do usuário e e sua idade como argumentos de entrada (usando as variáveis argc e *argv[]), e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
	$ ./ola_usuario_2 Eu 30
	$ cat Eu.txt
	$ Nome: Eu
	$ Idade: 30 anos
	$

4. Crie uma função que retorna o tamanho de um arquivo, usando o seguinte protótipo:

	int tam_arq_texto(char *nome_arquivo);

Salve esta função em um arquivo separado chamado 'bib_arqs.c'. Salve o protótipo em um arquivo chamado 'bib_arqs.h'. Compile 'bib_arqs.c' para gerar o objeto 'bib_arqs.o'.

5. Crie uma função que lê o conteúdo de um arquivo-texto e o guarda em uma string, usando o seguinte protótipo:

	void le_arq_texto(char *nome_arquivo, char *conteúdo);

Repare que o conteúdo do arquivo é armazenado no vetor 'conteudo[]'. Ou seja, ele é passado por referência. Salve esta função no mesmo arquivo da questão 4, chamado 'bib_arqs.c'. Salve o protótipo no arquivo 'bib_arqs.h'. Compile 'bib_arqs.c' novamente para gerar o objeto 'bib_arqs.o'.

6. Crie um código em C que copia a funcionalidade básica do comando 'cat': escrever o conteúdo de um arquivo-texto no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'cat_falsificado':
	$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
	$ ./cat_falsificado ola.txt
	$ Ola mundo cruel! Ola universo ingrato!
	$

7. Crie um código em C que conta a ocorrência de uma palavra-chave em um arquivo-texto, e escreve o resultado no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'busca_e_conta':
	$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
	$ ./busca_e_conta Ola ola.txt
	$ 'Ola' ocorre 2 vezes no arquivo 'ola.txt'.
$

Códigos 

#include <stdio.h>
#include <stdlib.h>
#include "bib_arqs.h"

int tam_arq_texto(char *nome_arquivo)
{

FILE *fp;
int i=0;
fp = fopen(nome_arquivo, "r");
char ch;
int tamanho=0;

if(!fp)
{
  //Arquivo ASCII, para escrita
  printf("Erro na leitura do arquivo");
  exit(0);
}

while (1)
{
  ch = fgetc(fp);
  if(ch == EOF)
    break;
  tamanho++;
}
fclose(fp);

return tamanho;

}

void le_arq_texto (char *nome_arquivo, char *conteudo)
{

FILE *fp;
int i=0;
fp = fopen(nome_arquivo, "r");
char ch;
int tamanho=0;

if(!fp)
{
  //Arquivo ASCII, para escrita
  printf("Erro na leitura do arquivo");
  exit(0);
}

while (1)
{
  ch = fgetc(fp);
  if(ch == EOF)
    break;
  
  conteudo[tamanho] = ch;
  tamanho++;
}
fclose(fp);

}

////

int tam_arq_texto(char *nome_arquivo);
void le_arq_texto(char *nome_arquivo, char *conteudo);

//////

#include <stdio.h>
#include <stdlib.h> 
#include "bib_arqs.h"

int main(int argc , char *argv[])
{
char string[200]="";

le_arq_texto(argv[1],string);

printf("%s",string);


return 0;
}

///////
#include <stdio.h>
#include <stdlib.h>

int main()
{
FILE *fp;
char string[100] = "Ola mundo!";
int i=0;
fp = fopen("ola_mundo.txt", "w");

if(!fp)
{
  //Arquivo ASCII, para escrita
  printf("Erro na leitura do arquivo");
  exit(0);
}

for(i=0; string[i]; i++)
  putc(string[i],fp);
fclose(fp);
return 0;
}
//////////

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc , char *argv[])
{
FILE *fp;
char frase[200] = "Nome: ";
char idade_frase[200] = "Idade: ";
int i=0;
fp = fopen("Eu.txt", "w");

if(!fp)
{
  //Arquivo ASCII, para escrita
  printf("Erro na leitura do arquivo");
  exit(0);
}


strcat(frase,argv[1]);

strcat(idade_frase, argv[2]);
for(i=0; frase[i]; i++)
  putc(frase[i],fp);
putc('\n',fp);
for(i=0; idade_frase[i]; i++)
  putc( idade_frase[i],fp);
fclose(fp);
return 0;
}
