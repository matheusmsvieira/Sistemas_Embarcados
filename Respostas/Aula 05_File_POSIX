os códigos se apresentam no final desta página!

Para todas as questões, utilize as funções da norma POSIX (open(), close(), write(), read() e lseek()). Compile os códigos com o gcc e execute-os via terminal.

1. Crie um código em C para escrever "Ola mundo!" em um arquivo chamado 'ola_mundo.txt'.

2. Crie um código em C que pergunta ao usuário seu nome e sua idade, e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':
	$ ./ola_usuario_1
	$ Digite o seu nome: Eu
	$ Digite a sua idade: 30
	$ cat Eu.txt
	$ Nome: Eu
	$ Idade: 30 anos
	$

3. Crie um código em C que recebe o nome do usuário e e sua idade como argumentos de entrada (usando as variáveis argc e *argv[]), e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
	$ ./ola_usuario_2 Eu 30
	$ cat Eu.txt
	$ Nome: Eu
	$ Idade: 30 anos
	$

4. Crie uma função que retorna o tamanho de um arquivo, usando o seguinte protótipo:

	int tam_arq_texto(char *nome_arquivo);

Salve esta função em um arquivo separado chamado 'bib_arqs.c'. Salve o protótipo em um arquivo chamado 'bib_arqs.h'. Compile 'bib_arqs.c' para gerar o objeto 'bib_arqs.o'.

5. Crie uma função que lê o conteúdo de um arquivo-texto e o guarda em uma string, usando o seguinte protótipo:

	void le_arq_texto(char *nome_arquivo, char *conteúdo);

Repare que o conteúdo do arquivo é armazenado no vetor 'conteudo[]'. Ou seja, ele é passado por referência. Salve esta função no mesmo arquivo da questão 4, chamado 'bib_arqs.c'. Salve o protótipo no arquivo 'bib_arqs.h'. Compile 'bib_arqs.c' novamente para gerar o objeto 'bib_arqs.o'.

6. Crie um código em C que copia a funcionalidade básica do comando 'cat': escrever o conteúdo de um arquivo-texto no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'cat_falsificado':
	$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
	$ ./cat_falsificado ola.txt
	$ Ola mundo cruel! Ola universo ingrato!
	$

7. Crie um código em C que conta a ocorrência de uma palavra-chave em um arquivo-texto, e escreve o resultado no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'busca_e_conta':
	$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
	$ ./busca_e_conta Ola ola.txt
	$ 'Ola' ocorre 2 vezes no arquivo 'ola.txt'.
$

///////
#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include "bib_arqs.h"

int tam_arq_texto(char *nome_arquivo)
{
int fp;
int i=0;
fp = open(nome_arquivo, O_WRONLY | O_CREAT , S_IRWXU);
char ch;
int tamanho=0;
if(fp==-1)
	{
		printf("Erro na abertura do arquivo.\n");
		exit(-1);
	}


while (read (fp, &ch, sizeof(ch))!= 0)
	{
  	tamanho++;
	}
close(fp);

return tamanho;
}

void le_arq_texto (char *nome_arquivo, char *conteudo) {
int fp;
fp = open(nome_arquivo, O_RDONLY | O_CREAT , S_IRWXU);
char ch;
int tamanho=0;

if(fp==-1)
	{
		printf("Erro na abertura do arquivo.\n");
		exit(-1);
	}


while (read (fp, &ch, sizeof(ch))!= 0)
	{
	conteudo[tamanho]=ch;
  	tamanho++;

	}
close(fp);
}
//////
int tam_arq_texto(char *nome_arquivo);
void le_arq_texto(char *nome_arquivo, char *conteudo);

///////
#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include "num_caracs.h"
#include "bib_arqs.h"

int main(int argc, char *argv[])
{

char string[100]="";
int i=0;
int a=0;
int contador=0;
int tamanho_palavra=0;

tamanho_palavra = Num_Caracs(argv[1]);

le_arq_texto(argv[2],string);

for(i=0;string[i] != '\0' ;i++)
{
  if(string[i]==argv[1][a])
  {
     a++;
  }
  else if (string[i]!=argv[1][a])
  {
    a=0;
  }
  if (tamanho_palavra==a)
  {
    contador++;
   
    a=0;
  }
}
printf("'%s' ocorre %d vezes no arquivo '%s'\n",argv[1],contador,argv[2]);
return 0;

}

///////
#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include "bib_arqs.h"
int main(int argc , char *argv[])
{
char string[200]="";

le_arq_texto(argv[1],string);

printf("%s",string);


return 0;
}
//////////
#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>

int main(int argc, const char * argv[])
{
	int fp, i;
	char string[100] = "Ola Mundo!";

	fp = open ("ola_mundo.txt", O_WRONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}
		
	for(i=0; string[i]; i++)
		write(fp, &(string[i]), 1); // Grava a string, caractere a caractere	
	write(fp, "\n", 1);
	close(fp);

	return 0;
}

////////

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>

int main()
{
	int fp, i;
	char nome[100];
	char idade[100];
	printf ("Digite seu nome:");
	gets(nome);
	printf ("Digite sua idade:");
	gets(idade);
	fp = open (nome, O_WRONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}
	write(fp, "Nome: ", 6*sizeof(char)); // Grava a string, caractere a caractere	
	for(i=0; nome[i]; i++)	
	 write(fp, &(nome[i]), 1); // Grava a string, caractere a caractere	
	write(fp, "\r\n", 2);
	write(fp, "Idade: ", 7*sizeof(char)); // Grava a string, caractere a caractere
	for(i=0; idade[i]; i++)	
	write(fp, &(idade[i]), 1); // Grava a string, caractere a caractere
	write(fp, " anos", 5);
	close(fp);
	return 0;
}
/////////

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>

int main(int argc, const char * argv[])
{
	int fp, i;
	char nome[100];
	char idade[100];
	fp = open ("Eu.txt", O_WRONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}
	write(fp, "Nome: ", 6*sizeof(char)); // Grava a string, caractere a caractere	

	for(i=0; argv[1][i]; i++)	
	 write(fp, &(argv[1][i]), 1); // Grava a string, caractere a caractere	
	write(fp, "\r\n", 2);
	write(fp, "Idade: ", 7*sizeof(char)); // Grava a string, caractere a caractere
	for(i=0; argv[2][i]; i++)	
	write(fp, &(argv[2][i]), 1); // Grava a string, caractere a caractere
	write(fp, " anos", 5);
	close(fp);
	return 0;
}

/////////

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>

int main(int argc, const char * argv[])
{
	int fp, i;
	char nome[100];
	char idade[100];
	fp = open ("Eu.txt", O_WRONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}
	write(fp, "Nome: ", 6*sizeof(char)); // Grava a string, caractere a caractere	

	for(i=0; argv[1][i]; i++)	
	 write(fp, &(argv[1][i]), 1); // Grava a string, caractere a caractere	
	write(fp, "\r\n", 2);
	write(fp, "Idade: ", 7*sizeof(char)); // Grava a string, caractere a caractere
	for(i=0; argv[2][i]; i++)	
	write(fp, &(argv[2][i]), 1); // Grava a string, caractere a caractere
	write(fp, " anos", 5);
	close(fp);
	return 0;
}
